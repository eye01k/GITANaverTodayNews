@charset "utf-8";
/* 로봇 PJ CSS - robot.css */

@import url('https://fonts.googleapis.com/css2?family=Russo+One&family=Smooch+Sans:wght@500&display=swap');

/* 
font-family: 'Russo One', sans-serif;
font-family: 'Smooch Sans', sans-serif;
*/
html{
  scroll-behavior: smooth;
  /* 내부 아이디 위치로 이동 시 스크롤 애니메이션을 부드럽게 처리
  최상위 요소인 html에 셋팅 */
}
html,body{
  margin: 0;
  padding: 0;
}

body{
  background: url(../images/bg.jpg) no-repeat fixed top/cover;
  overflow-x: hidden; /* 가로 스크롤 숨기기 */
}

/* body *{
  outline: 2px dashed lime;
} */

/******************************************** 
  [요소를 화면 정중앙에 정렬하는 법]
  1.50%로 밀고 자기 크기의 절반만큼 빼기
  ->> calc() method 사용
  -사칙연산이 모두 가능하며 여기서는 유동적인 % 단위에서 특정 px을 빼는 데에 사용함
  *주의: 사칙연산 기호 앞뒤로 띄어쓰기 필수

  참고) https://www.w3schools.com/css/css_math_functions.asp


  2.50%를 밀고 자기 자신 크기의 절반만큼 반대로 이동
  ->> transform: translate(-50%, -50%) 사용


********************************************/

h1#logo{
  position: fixed;
  top: calc(50% - 102px);
  left: calc(50% - 102px);
  z-index: 1; /* 맨 앞으로 나오도록 */
  transform: scale(2);
  width: 200px;
  height: 200px;
  border: 2px solid #ccc;
  border-radius: 50%;
  margin: 0;
  text-align: center; /* 글자 가로 중앙정렬 */
  line-height: 200px; /* 글자 세로 중앙정렬 */
  color: rgb(137, 250, 126);
  font-family: 'Russo One', sans-serif;
  font-size: 40px;
  text-shadow: 2px 2px 2px #000;
  box-shadow: 0 0 20px 5px hotpink,
              inset 0 0 20px 5px black;
  background: pink url(../images/robot_03.png) no-repeat;
  background-size: contain;
  background-position: center 10px;

  /* 애니메이션 호출 */
  animation: logoAni 2s ease-in-out 2s forwards, 
  wiggle .7s linear 4s infinite alternate;
}

/* 로고 애니메이션 키프레임 */
@keyframes logoAni {
  /* 시작값 = 초기값 이므로 생략*/
  /* from{
    top: calc(50% - 102px);
    left: calc(50% - 102px);
    transform: scale(2);
  } */
  /* 80% */
  80%{
    top: 50px;
    left: 50px;
    transform: scale(1) rotate(0deg);
  }
  /* 80%~100% 구간에 rotate 각도를 20deg로 변경하여 후속 애니와 자연스럽게 연결 */

  /* 끝값 */
  100%{
    top: 50px;
    left: 50px;
    transform: scale(1) rotate(20deg);
  }
} /* logoAni 키프레임1 */

/* 로고 흔들기 키프레임 */
@keyframes wiggle {
  0%{
    transform: rotate(20deg);
  }
  100%{
    transform: rotate(-20deg);
  }
}

/* 머리통 날라오기 키프레임 */
@keyframes headfly {
  to{
    left: 0%;
  }
}

@keyframes bodyfly {
  to{
    left: 0%;
  }
}

@keyframes mouth {
  to{
    transform: scaleY(.2);
  }
}
@keyframes arm1{
  from{
    transform: rotate(0deg);
  }
  to{
    transform: rotate(-150deg);
  }
}
@keyframes arm2 {
  from{
    transform: rotate(-150deg);
  }
  to{
    transform: rotate(-130deg);
  }
}
@keyframes TV {

  to{
    opacity: 1;
  }
}
/* 
  [CSS 애니메이션]
  -시간에 따라 CSS설정이 변경되어 애니메이션
  : 키프레임을 설정하고 이것을 호출하는 방식

  -애니메이션 키프레임 만드는 법
  키프레임: 애니메이션 장면을 넣는 코드

  1. 두 장면 키프레임
  @keyframes 키프레임이름{
    from{시작 css설정}
    to{끝나는 css설정}
  }

  또는

  @keyframes 키프레임이름{
    0%{시작 css설정}
    100%{끝나는 css설정}
  }

  *만약 from설정이 초기 설정과 같다면 from 생략 가능

  2.여러 장면 키프레임
  @keyframes 키프레임이름{
    0%{시작 css설정}
    10%{중간 css설정}
    20%{중간 css설정}
    ...
    100%{끝나는 css설정}
  }

  1) 장면에 대한 시간 계산
  ->전체시간 * 설정된%/100

  2) 전체시간 셋팅 타이밍
  ->호출 시에 셋팅

  *설정된 키프레임 호출하는 방법
  animation: 이시이지반방마
  (이름 시간 이징 지연 반복 방향 마지막상태)

  (1)이름(animation-name): 키프레임 이름

  (2)시간(animation-duration): 애니메이션 동작 시간 -> 초단위(s)

  (3)이징(animation-timing-function): 이징 가속도 

  (4)지연(animation-delay): 애니메이션 시작 지연(s)

  (5)반복(animation-iteration-count): 애니메이션 반복 횟수 -> 기본값 1, 숫자를 쓰면 그 수만큼 반복
  ->영원히 반복: infinite 

  (6)방향(animation-direction): 애니메이션은 기본적으로 시작->끝 으로 감
  ->반복 시 시작과 반대 경로로 애니메이션: alternate- 시작->끝, 끝->시작
  *주의: 반복횟수가 2회 이상이어야 적용
  
  (7)마지막상태(animation-fill-mode): 애니메이션은 기본적으로 끝났을 때 처음 상태로 돌아감
  ->forwards: 애니메이션 끝 상태로 마무리
  *주의: infinite일 때는 해당사항 없음
*/

/* 내용보기 링크 타이틀 */
.link{
  position: absolute;
  top: 100px;
  right: 50px;
  /* 부모는? 보이는 화면 */
}
.link a{
  font-family: 'Smooch Sans', sans-serif;
  font-size: 70px;
  color: rgb(96, 255, 96);
  text-decoration: none;
  text-shadow: 2px 2px 2px #000;
  opacity: 0;

}
/* 마우스 오버 시 */
.link a:hover{
  color: red;
  text-decoration: overline;
}
.btnTop{
  position: fixed;
  bottom: 50px;
  right: 50px;
  width: 100px;
  height: 100px;
  text-align: center;
  line-height: 100px;
  background: rgba(255, 255, 255, 0.76);
  border-radius: 50%;
  font-family: 'Smooch Sans', sans-serif;
  font-size: 50px;
  color: blue;
  text-decoration: none;
  font-weight: bold;
  opacity: 0;

  
}
/* 버튼 오버 시 */
.btnTop:hover{
  background-color: #ff0;
  color: red;
}
/* 로봇 머리 */
#head{
  position: relative;
  /* 부모 자격 */
  left: 100%; /* 머리를 화면의 오른쪽 바깥으로 */
  width: 250px;
  height: 250px;
  background: url(../images/metal01.jpg) no-repeat center/cover;
  margin: 0 auto;
  margin-top: 100px;

  /* 머리통 애니메이션 */
  animation: headfly 1.5s ease-out 3s forwards;
}

/* 눈 */
#eye1{
  position: absolute;
  top: 50px;
  left: 50px;
  /* 부모는? */
  width: 50px;
  height: 50px;
  background: url(../images/e1.jpg) no-repeat 0/100% 100%;
}
#eye2{
  position: absolute;
  top: 50px;
  right: 50px;
  /* 부모는? */
  width: 50px;
  height: 50px;
  background: url(../images/e2.jpg) no-repeat 0/100% 100%;
}
/* 코 */
#nose{
  position: absolute;
  top: 108px;
  left: 100px;
  width: 50px;
  height: 70px;
  background: url(../images/nose.jpg) no-repeat 0/100% 100%;
}
/* 입 */
#mouth{
  position: absolute;
  bottom: 8px;
  left: 65px;
  width: 120px;
  height: 50px;
  background: url(../images/mouth.png) no-repeat 0/100% 100%;

  /* 입 애니 */
  animation: mouth .1s linear 6s infinite alternate;
}
/* 귀 */
#ear1{
  position: absolute;
  top: 50px;
  left: -51px;
  width: 50px;
  height: 120px;
  background: url(../images/metal02.jpg) no-repeat 0/100% 100%;
  border-radius: 20px 0 0 20px;
}
#ear2{
  position: absolute;
  top: 50px;
  right: -51px;
  width: 50px;
  height: 120px;
  background: url(../images/metal02.jpg) no-repeat 0/100% 100%;
  border-radius: 0 20px 20px 0 ;
}
#body{
  position: relative;
  left: -100%; /* 몸을 화면의 왼쪽 바깥으로 */
  width: 250px;
  height: 300px;
  background: url(../images/metal01.jpg) no-repeat 0/100% 100% ;
  margin: 0 auto;
  margin-top: 50px; 
  margin-bottom: 300px;

  /* 몸통 애니 */
  animation: bodyfly 1.5s ease-out 3s forwards;
}
#neck{
  position: absolute;
  top: -50px;
  left: 100px;
  width: 50px;
  height: 50px;
  background: url(../images/metal02.jpg) no-repeat 0/100% 100%;
}
#sholder1{
  position: absolute;
  left: -90px;
  top: -20px;
  width: 90px;
  height: 90px;
  background: url(../images/metal01.jpg) no-repeat center/100% 100%;
  border-radius: 50px 0 0 50px;
}
#sholder2{
  position: absolute;
  z-index: 1;
  right: -90px;
  top: -20px;
  width: 90px;
  height: 90px;
  background: url(../images/metal01.jpg) no-repeat center/100% 100%;
  border-radius: 0 50px 50px 0;
}
.part{
  width: 50px;
  height: 260px;
  background: url(../images/metal02.jpg) repeat-y 0/100%;
}

#arm1{
  position: absolute;
  z-index: -2;
  top: 40px;
  left: -50px;
}
#arm2{
  position: absolute;
  z-index: -1;
  top: 40px;
  right: -50px;
  transform-origin: top;

  /* 팔 애니 */
  animation: arm1 .4s linear 5s forwards,
  arm2 .35s linear 5.4s infinite alternate;
}
#leg1{
  position: absolute;
  bottom: -260px;
  left: 0px;
}
#leg2{
  position: absolute;
  bottom: -260px;
  right: 0px;
}

/* TV */
#tv{
  position: absolute;
  top: 72px;
  left: 24px;
  /* 부모는? #body */
  width: 200px;
  height: 150px;
  background: url(../images/tv.jpg) no-repeat 0/100% 100%;
  opacity: 0;

  /* tv애니메이션 */
  animation: TV .5s cubic-bezier(0.65, 0.05, 0.36, 1) 5s 7 alternate forwards;
}
/* 스크린 */
#screen{
  position: absolute;
  top: 15px;
  left: 10px;
  /* 부모는? #tv */
  width: 143px;
  height: 109px;
  background-color: #000;
  border-radius: 15px;
  overflow: hidden;
}

#screen iframe{
  position: absolute;
  top: -18px;
  left: -26px;
  /* 부모는? #screen */
  width: 136%;
  height: 136%;
  border: none;
  /* iframe의 기본 border 없앰 */
}

/* 로봇 설명박스 */
#dcbx{
  width: 800px;
  margin: 0 auto;
  margin-bottom: 200px;
  border: 3px solid white;
  border-radius: 20px;
  padding: 15px 30px;
  background-color: rgba(0, 0, 0, 0.562);
  color: white;
  text-shadow: 1px 1px 1px #000;
  box-shadow: inset 0 0 60px 20px aqua,
  inset 0 0 30px 5px mediumspringgreen;
  /* box-shadow 는 text-shadow와 달리 그림자 크기(spread)를 줄 수 있다 */
}

/* 로봇 설명 제목 */
#dcbx h2{
  position:sticky;
  top: 0;
  /* 스크롤 시 top값 설정으로 위치 고정 */
  font-size: 40px;
  text-align: center;
  color: lime;
  background-color: rgba(255, 255, 255, 0.589);
  border-radius: 20px;
  
}

.blink{
  animation: TV .5s cubic-bezier(0.65, 0.05, 0.36, 1) 6s 7 alternate forwards;
}

/* 출처 */
#dcbx small{
  display: block;
  text-align: center;
  color: #ff0;
}

/* 설명 문단 */
#dcbx p{
  font-size: 15px;
  line-height: 1.8;
  /* 줄간격 */
  letter-spacing: 1px;
  /* 자간 */
  word-spacing: 1px;
  /* 단어 간격 */

  /* 가독성을 위한 다단 설정(다중열 속성) */
  column-count: 3;
  column-rule: 3px dotted rgb(0, 255, 170);
  /* 다중열 구분선 */
  column-gap: 50px;
  /* 다중열 사이 간격 */

  /* 문단 정렬 */
  text-align: justify; /* 양쪽 정렬- 양쪽 끝라인 맞춤 */
  word-break: break-all; /* 단어 깨기-영문자는 기본적으로 단어 단위로 붙어다니기 때문 */
  text-indent: 20px;
  /* 첫 줄 들여쓰기 */
}
/* 가상요소로 첫 글자 디자인 변경 */
#dcbx p::first-letter{
  font-size: 40px;
}